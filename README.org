
* COVIDm

This repository contains C++ code to simulate several epidemiological
models, with emphasis on those most useful to model COVID19.

** Contents

The source code produces the following executables (the models are
described [[./model_desc/README.md][here]]):

  - sir :: Simple fully-connected SIR model.  The simplest
    implementation, mostly useful as check for other programs.

  - sir_m :: The same fully-connected SIR as in =sir= but with the
    option to do multiple runs and compute mean and variance across
    realizations of the stochastic dynamcis.

  - sir_f :: A SIR with population divided in families, and different
    in- and out-of-family transmission rates.

  - seeiir_i1, seeiir_i2, seeiir_i3 :: Three implementations of a
    SEEIIR model, with population divided in families.

  - seeiir_h ::  Hierarchical SEEIIR (individuals are grouped in
    families, families in neighborhoods, etc).  ~seeiir_h_nol~ is an
    alternative implementation without use of the LEMON library, but
    is somewhat slower.

All models mentioned are implemented in their stochastic variants.
The programs read a few arguments from the command line, and the model
parameters from a parameter file.  Running the programs without
arguments outputs a brief reminder of the required arguments.  The
required arguments are typically the name of the parameter file, the
random number seed, the maximum time to run and the number of runs (if
this number is greater than one, the output will be the average and
variance over the different runs).  Unless an output file is required
as argument, programs write to standard output.

The parameter file gives the model parameters and information about
the population, such as the number of families, and number of family
members.

The format of the parameter file can be gathered from the examples (in
the [[./model_desc][model_desc]] directory:

 - [[./model_desc/sir_par.dat][sir_par.dat]] :: for =sir= and =sir_m=
 - [[./model_desc/sir_par.dat][sir_f_par.dat]] :: for =sir_f=
 - [[./model_desc/seeiir_par.dat][seeiir_par.dat]] :: for =seeiir_i1=, =seeiir_i2= and =seeiir_i3=
 - [[file:model_desc/seeiir_h_par.dat::# Nlevels][seeiir_h_par.dat]] :: for =seeiir_h= and =seeir_h_nol=

For the meaning of the parameters, see the [[./model_desc/README.md][model description]].


* Installation

You can download one of the release tarballs or, for the latest
version, from the latest commit (clicking =clone or downlaod= above).

To build form the latest commit install ~autoconf~ and ~automake~.
First generate the ~configure~ script: in the source directory do

: autoreconf -if

This step can be skipped if you downloaded a release tarball, which
includes the =configure= script.

Then proceed to configure and make:

: ./configure
: make
: sudo make install

This installs in =/usr/local=, you can give =--prefix= to the
~configure~ script to change this.  The ~make~ stage will fail unless
the configure script runs till the end.  If you don't see the message
: configure: creating ./config.status
in the last few lines, the configuration has failed, probably due to
missing libraries.

The following libraries are required to build.  With Linux package
managers, you typically need to install the /development/ version of
the package.

 - GNU Scientific library
 - LEMON (Library for Efficient Modeling and Optimization in Networks)
